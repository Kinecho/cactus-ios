# .circleci/config.yml
version: 2.1
executors: 
  cactus-ios: 
    working_directory: /Users/distiller/project
    macos:
      xcode: "10.3.0"
    environment:
      FL_OUTPUT_DIR: fl_output
aliases: 
  - &match-ssh-fingerprint "4b:a2:6f:21:f5:6a:c2:26:05:b4:10:29:01:17:7c:51"
commands:
  restore-pods-cache: 
    steps: 
      - restore_cache:
          name: "Restore Pods Cache"
          key: 1-pods-{{ checksum "Podfile.lock" }}
  restore-caches:
    steps:
      - restore-pods-cache
      - restore_cache:
          name: "Restore Ruby Cache"
          key: 2-gems-{{ checksum "Gemfile.lock" }}      
  install-ruby: 
    steps: 
      - restore_cache:
          name: "Restore Ruby Cache"
          key: 2-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          name: "Save Ruby Cache"
          key: 2-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - vendor
            - .bundle
  install: 
    steps:       
      - install-ruby
      - run:
          name: Fetch CocoaPods Specs
          command: |
            curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      - restore-pods-cache
      - run:
          name: "Install CocoaPods"
          command: bundle exec pod install --verbose
      - save_cache:
          name: "Save Pods Cache"
          key: 1-pods-{{ checksum "Podfile.lock" }}
          paths:
            - Pods

jobs:  
  build-and-test:
    executor: cactus-ios    
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - install
      - run: 
          name: SwiftLint lane
          command: bundle exec fastlane lint
      - run:
          name: Build and run tests
          command: bundle exec fastlane test
          environment:
            SCAN_DEVICE: iPhone 8
            SCAN_SCHEME: Cactus Prod
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - store_test_results:
          path: fl_output/scan
      - store_artifacts:
          path: fl_output
      
  testflight-upload: 
    executor: cactus-ios
    steps: 
      - checkout
      - install-ruby
      - restore-caches
      - run:
          name: Deploy to TestFlight
          command: bundle exec fastlane beta                
      - store_artifacts:
          path: fl_output
  testflight-finalize-release: 
    executor: cactus-ios
    steps: 
      - install-ruby
      - add_ssh_keys:
          fingerprints:
            - *match-ssh-fingerprint
      - run:
          name: Finalize Release & upload symbols
          command: bundle exec fastlane finalize_release
      - store_artifacts:
          path: fl_output

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build-and-test
      - testflight_approval:
          type: approval
          name: &testflight_approval_name "TestFlight Approval"
          requires: 
            - build-and-test
      - testflight-upload:
          name: &testflight_name "Deploy to Testflight"
          requires: 
            - *testflight_approval_name
      - finalize-release-approval: 
          type: approval
          name: &finalize-release-approval "Finalze Release"
          requires: 
            - *testflight_name
      - testflight-finalize-release:
          name: "Upload Symbols to Sentry & Create Release"
          requires: 
            - *finalize-release-approval



