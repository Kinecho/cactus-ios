# .circleci/config.yml
version: 2.1
orbs:
  slack: circleci/slack@3.2.0 #https://github.com/CircleCI-Public/slack-orb
executors: 
  cactus-ios: 
    working_directory: /Users/distiller/project
    macos:
      xcode: "11.0.0"
    environment:
      FL_OUTPUT_DIR: fl_output
  cactus-web:
    working_directory: ~/project  
    docker:
      - image: circleci/node:8.15.0-browsers
aliases: 
  - &match-ssh-fingerprint "4b:a2:6f:21:f5:6a:c2:26:05:b4:10:29:01:17:7c:51"
  - &cactus-ios-read-write-fingerprint "ca:4b:99:13:a3:ba:7c:8e:9b:2a:f5:2a:e9:95:9e:a8"
  - &pod-cache 4-pods-{{ checksum "Podfile.lock" }}
  - &gem-cache 2-gems-{{ checksum "Gemfile.lock" }}
  - &webhook-url
      webhook: "${SLACK_ENGINEERING_APPS_CI_URL}"
  - &workflow-name

commands:    
  notify-on-failure: 
    parameters:
      workflow_name:
        type: string
        default: "<not set>"
        description: "The message to send to slack"
    steps: 
      - get-repo-link
      - slack/status:
          <<: *webhook-url
          fail_only: true
          include_project_field: false
          include_job_number_field: false
          failure_message: ":boom: *$CIRCLE_JOB* job failed in workflow <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID| << parameters.workflow_name >> >\nBranch \\`<$(cat .git_branch_url.txt)|${CIRCLE_BRANCH}>\\`"  
  get-repo-link:
    steps:
      - run:
          name: Get Repo Link
          command: |
            GIT_BRANCH_URL="https://github.com/Kinecho/cactus-ios/compare/${CIRCLE_BRANCH}"
            SLACK_GIT_LINK="<https://github.com/Kinecho/cactus-ios/compare/${CIRCLE_BRANCH}?expand=1|Open Pull Request>"
            if [[ ! -z $CIRCLE_PULL_REQUEST ]] ; then
              SLACK_GIT_LINK="<$CIRCLE_PULL_REQUEST|View Pull Request>"
              GIT_BRANCH_URL=$CIRCLE_PULL_REQUEST
            fi
            echo "Slack GIT Link is \"${SLACK_GIT_LINK}\""
            export SLACK_GIT_LINK
            export GIT_BRANCH_URL
            echo $SLACK_GIT_LINK >> .slack_git_url.txt
            echo $GIT_BRANCH_URL >> .git_branch_url.txt
            echo 'export GIT_BRANCH_URL="$GIT_BRANCH_URL"' >> $BASH_ENV  
            echo 'export SLACK_GIT_LINK="$SLACK_GIT_LINK"' >> $BASH_ENV  
  restore-caches:
    steps:
      - restore-pods-cache
      - restore_cache:
          name: "Restore Ruby Cache"
          key: 2-gems-{{ checksum "Gemfile.lock" }}      
  install-ruby: 
    steps: 
      - restore_cache:
          name: "Restore Ruby Cache"
          key: *gem-cache
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          name: "Save Ruby Cache"
          key: *gem-cache
          paths:
            - vendor/bundle
            - vendor
            - .bundle
  save-pods-cache: 
    steps: 
      - save_cache: 
          name: "Restore Pods Cache"
          key: *pod-cache
          paths: 
            - Pods
            - ~/.cocoapods
  restore-pods-cache: 
    steps: 
      - restore_cache: 
          name: "Restore Pods Cache"
          key: *pod-cache
  install-pods:
    steps:
      - restore-pods-cache
      - run:
          name: Install CocoaPods Master Repo
          command: |
            curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf      
      - run:
          name: "Install CocoaPods"
          command: bundle exec pod install --verbose      
      - save-pods-cache
  install-swiftlint: 
    steps: 
      - run: 
          name: Install Swiftlint via homebrew
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install swiftlint
  install-sentry: 
    steps:
      - run: 
          name: "Install Sentry CLI"
          command: brew install getsentry/tools/sentry-cli
jobs:  
  notify-release-started:
    description: "Notify slack that a release has started and provide a link"
    resource_class: small
    parameters:
      workflow_name:
        type: string
        default: "Default Workflow"
        description: "The message to send to slack"
    executor: cactus-web
    steps:
      - slack/notify:
          <<: *webhook-url
          include_job_number_field: false
          include_visit_job_action: false
          include_project_field: false
          ts: "$(date +%s)"
          color: "#d8d8d8"
          message: "Starting workflow <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID| << parameters.workflow_name >> > \nBranch \\`${CIRCLE_BRANCH}\\`"
  notify-branch-workflow-started:
    executor: cactus-web
    description: "Notify slack that a branch workflow has started and provide a link"
    resource_class: small
    parameters:
      workflow_name:
        type: string
        default: "Default Workflow"
        description: "The message to send to slack"    
    steps:
      - get-repo-link
      - slack/notify:
          <<: *webhook-url
          include_job_number_field: false
          include_visit_job_action: false
          include_project_field: false
          color: "#d8d8d8"
          ts: "$(date +%s)"
          message: ":building_construction: Starting workflow <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID| << parameters.workflow_name >> > \nBranch \\`${CIRCLE_BRANCH}\\`\n$(cat .slack_git_url.txt)"
  notify-branch-workflow-finished:
    description: "Notify slack that a branch workflow has finished and provide a link"
    parameters:
      workflow_name:
        type: string
        default: "Default Workflow"
        description: "The message to send to slack"
    executor: cactus-web
    resource_class: small
    steps:
      - get-repo-link
      - slack/notify:
          <<: *webhook-url
          color: "good"
          include_job_number_field: false
          include_visit_job_action: false
          include_project_field: false
          ts: "$(date +%s)"
          message: ":white_check_mark: \\`${CIRCLE_BRANCH}\\` <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID| << parameters.workflow_name >> > completed successfully.\n$(cat .slack_git_url.txt)"  
  run-tests: 
    parameters:
      workflow_name:
        type: string
        default: ""
        description: "The message to send to slack"
    executor: cactus-ios    
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - install-ruby
      - add_ssh_keys:
          name: "Add Fastlane Match SSH Key"
          fingerprints:
            - *match-ssh-fingerprint
      - install-swiftlint
      - run: exit 1
      - run: 
          name: Run Swiftlint
          command: bundle exec fastlane lint
      - install-pods
      - run:
          name: Run tests via Fastlane Scan
          command: bundle exec fastlane test
          environment:
            SCAN_DEVICE: iPhone 8
            SCAN_SCHEME: Cactus Prod
      - notify-on-failure: 
          workflow_name: << parameters.workflow_name >>
  upload-to-testflight:
    parameters:
      workflow_name:
        type: string
        default: ""
        description: "The message to send to slack"
    executor: cactus-ios    
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - add_ssh_keys:
          name: "Add Fastlane Match SSH Key"
          fingerprints:
            - *match-ssh-fingerprint
      - install-ruby
      - install-swiftlint
      - install-pods
      - install-sentry
      - run: 
          name: Create Sentry Release
          command: "bundle exec fastlane create_release"
      - run:
          name: Deploy to TestFlight
          command: bundle exec fastlane beta
      - slack/notify:
          <<: *webhook-url
          color: 'good'
          include_job_number_field: false
          include_visit_job_action: false
          include_project_field: false
          ts: "$(date +%s)"
          message: "A new iOS build has been uploaded to testflight. <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID|View CI workflow>"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - store_test_results:
          path: fl_output/scan
      - store_artifacts:
          path: fl_output
      - notify-on-failure: 
          workflow_name: << parameters.workflow_name >>
  finalize-release: 
    parameters:
      workflow_name:
        type: string
        default: ""
        description: "The message to send to slack"
    executor: cactus-ios
    steps: 
      - checkout
      - install-ruby
      - run: 
          name: "Install Sentry CLI"
          command: brew install getsentry/tools/sentry-cli
      - add_ssh_keys:
          fingerprints:
            - *match-ssh-fingerprint
            - *cactus-ios-read-write-fingerprint
      - run: 
          name: "Run Finalize Release command"
          command: "bundle exec fastlane finalize_release"
      - run:
          name: "Bump Version and Push to GIT"
          command: bundle exec fastlane version_bump
      - notify-on-failure:
          workflow_name: << parameters.workflow_name >>
  upload-symbols:
    parameters:
      workflow_name:
        type: string
        default: ""
        description: "The message to send to slack"
    executor: cactus-ios
    steps: 
      - checkout
      - install-ruby
      - run: 
          name: "Install Sentry CLI"
          command: brew install getsentry/tools/sentry-cli
      - add_ssh_keys:
          fingerprints:
            - *match-ssh-fingerprint
            - *cactus-ios-read-write-fingerprint
      - run:
          name: Finalize Release & upload symbols
          command: bundle exec fastlane finalize_release
      - run: 
          name: "Associate commits with Sentry Release"
          command: |
            VERSION=$(sentry-cli releases propose-version)
            sentry-cli releases set-commits --auto $VERSION
      - store_artifacts:
          path: fl_output  
      - notify-on-failure:
          workflow_name: << parameters.workflow_name >>
workflows:
  version: 2.1
  release-pipeline:
    jobs:
      - notify-release-started:
          name: &workflow_name iOS Release Pipeline
          workflow_name: *workflow_name
          filters:
            branches:
              only: master
      - run-tests:
          name: &test-name "Run Tests"
          workflow_name: *workflow_name
          filters:
            branches:
              only: master
      - upload-to-testflight:
          name: &build-and-upload "Deploy to TestFlight"
          workflow_name: *workflow_name
          requires: 
            - *test-name
          filters:
            branches:
              only: master
      - finalize-release:
          name: &finalize-release "Finalize Release"
          workflow_name: *workflow_name
          requires: 
              - *build-and-upload
          filters:
            branches:
              only: master  
      - notify-branch-workflow-finished:
          name: *workflow_name
          requires:
            - *finalize-release
          filters:
            branches:
              only: master
      # TODO: Add upload symbols? Not sure if that's doing anything.. -NP 2019-10-03

  branch-pipeline:
    jobs:
      - notify-branch-workflow-started:
          name: &workflow_name Feature Branch Tests
          workflow_name: *workflow_name  
          filters:
            branches:
              ignore: master
      - run-tests:
          name: &test-name "Run Unit Tests"
          workflow_name: *workflow_name
          filters:
            branches:
              ignore: master      
      - notify-branch-workflow-finished:
          name: *workflow_name
          requires:
            - *test-name      




